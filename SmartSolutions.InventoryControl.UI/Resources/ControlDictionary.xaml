<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:ControlExtensions="clr-namespace:SmartSolutions.InventoryControl.UI.Helpers.ControlExtensions"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:converter="clr-namespace:SmartSolutions.InventoryControl.UI.Converters"
                    xmlns:local="clr-namespace:SmartSolutions.InventoryControl.UI.Resources">

    <converter:BytesToBitmapImageConverter x:Key="BytesToBitmapImageConverter"/>
    <converter:StringToImageConverter x:Key="StringToImageConverter"/>
    <converter:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
    <converter:CalendarDayNameConverter x:Key="CalendarDayNameConverter"/>
    <!-- design for scroll Viewer-->
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="rectangle"
                                SnapsToDevicePixels="True"
                                Background="#FF0c6991"
                                CornerRadius="3"
                                Height="{TemplateBinding Height}"
                                Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Width" Value="14"/>
        <Setter Property="Margin" Value="-14 0 0 0" />
        <Setter Property="MinWidth" Value="{Binding Width, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="Transparent">

                        <Border Padding="0 4">
                            <Track x:Name="PART_Track"
                                       IsDirectionReversed="true"
                                       IsEnabled="{TemplateBinding IsMouseOver}"
                                       Width="6"
                                       ViewportSize="NaN"
                                       HorizontalAlignment="Center">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Opacity="0" Command="{x:Static ScrollBar.PageUpCommand}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Opacity="0" Command="{x:Static ScrollBar.PageDownCommand}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb MinHeight="50" Style="{StaticResource ScrollBarThumb}" />
                                </Track.Thumb>
                            </Track>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Track" Property="IsEnabled" Value="True">
                            <Setter TargetName='PART_Track' Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Height" Value="14"/>
                <Setter Property="MinHeight" Value="{Binding Height, RelativeSource={RelativeSource Self}}"/>
                <Setter Property="Margin" Value="0 -14 0 0" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Track x:Name="PART_Track"
                                    IsEnabled="{TemplateBinding IsMouseOver}"
                                    Height="6"
                                       >
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Opacity="0" Command="{x:Static ScrollBar.PageLeftCommand}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Opacity="0" Command="{x:Static ScrollBar.PageRightCommand}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}" />
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" 
                                                CanContentScroll="{TemplateBinding CanContentScroll}" 
                                                CanHorizontallyScroll="False" 
                                                CanVerticallyScroll="False" 
                                                ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                Content="{TemplateBinding Content}" 
                                                Grid.Column="0" 
                                                Margin="{TemplateBinding Padding}" 
                                                Grid.Row="0"/>

                        <ScrollBar x:Name="PART_VerticalScrollBar" 
                                   Opacity="0.2"
                                   AutomationProperties.AutomationId="VerticalScrollBar" 
                                   Cursor="Arrow" 
                                   Grid.Column="1"
                                   Maximum="{TemplateBinding ScrollableHeight}" 
                                   Minimum="0" 
                                   Grid.Row="0" 
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"/>

                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Opacity="0.2"
                                   AutomationProperties.AutomationId="HorizontalScrollBar"
                                   Cursor="Arrow" 
                                   Grid.Column="0"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Minimum="0" 
                                   Orientation="Horizontal"
                                   Grid.Row="1" 
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                   ViewportSize="{TemplateBinding ViewportWidth}"/>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="1" Duration="0:0:0.3" Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" />
                                    <DoubleAnimation To="1" Duration="0:0:0.3" Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="0.2" Duration="0:0:0.3" Storyboard.TargetName="PART_VerticalScrollBar" Storyboard.TargetProperty="Opacity" />
                                    <DoubleAnimation To="0.2" Duration="0:0:0.3" Storyboard.TargetName="PART_HorizontalScrollBar" Storyboard.TargetProperty="Opacity" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type PasswordBox}" x:Key="PasswordBoxVisibilityPathIconStyle">
        <Setter Property="ControlExtensions:WaterMarkTextExtension.IsMonitoring" Value="False"/>
        <Setter Property="ControlExtensions:WaterMarkTextExtension.WatermarkText" Value="" />
        <Setter Property="ControlExtensions:WaterMarkTextExtension.WatermarkColor" Value="{StaticResource LightGrayColorBrush}" />
        <Setter Property="ControlExtensions:WaterMarkTextExtension.WatermarkIconPath" Value="{StaticResource Shape_Home}"/>
        <Setter Property="ControlExtensions:WaterMarkTextExtension.WatermarkIconVisibility" Value="Visible" />
        <Setter Property="ControlExtensions:PasswordHelper.PasswordIconPath" Value="{StaticResource Shape_ShowPassword}"/>
        <Setter Property="ControlExtensions:PasswordHelper.PasswordIconVisibility" Value="Collapsed" />
        <Setter Property="ControlExtensions:WaterMarkTextExtension.WatermarkIconMargin" Value="13,0" />
        <Setter Property="ControlExtensions:WaterMarkTextExtension.WatermarkIconMaxWidth" Value="35" />
        <Setter Property="ControlExtensions:WaterMarkTextExtension.WatermarkIconMaxHeight" Value="32" />
        <Setter Property="BorderBrush" Value="{StaticResource BlueColorBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontSize" Value="{StaticResource NormalSize}" />
        <Setter Property="Foreground" Value="{StaticResource GrayColorBrush}" />
        <Setter Property="Background" Value="{StaticResource PureWhiteColorBrush}"/>
        <Setter Property="Padding" Value="10,0" />
        <Setter Property="ControlExtensions:WaterMarkTextExtension.ValidationErrorColor" Value="{StaticResource RedColorBrush}" />
        <Setter Property="ControlExtensions:MiscControlExtensions.CornerRadius" Value="5" />
        <Setter Property="ControlExtensions:WaterMarkTextExtension.IsLoading" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="enterGotFocus" >
                            <DoubleAnimation Duration="0:0:0.4" To=".2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                        </Storyboard>
                        <Storyboard x:Key="exitGotFocus" >
                            <DoubleAnimation Duration="0:0:0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                        </Storyboard>

                        <Storyboard x:Key="enterHasText" >
                            <DoubleAnimation Duration="0:0:0.4" From=".2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                        </Storyboard>
                        <Storyboard x:Key="exitHasText" >
                            <DoubleAnimation Duration="0:0:0.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="{TemplateBinding ControlExtensions:MiscControlExtensions.CornerRadius}" 
                            Height="{TemplateBinding Height}" 
                            Background="{TemplateBinding Background}">

                        <Grid Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="error" 
                                       Grid.ColumnSpan="3" 
                                       Visibility="Visible" 
                                       Text="{TemplateBinding ControlExtensions:WaterMarkTextExtension.ValidationErrorMessage}" 
                                       VerticalAlignment="Bottom" 
                                       Padding="{TemplateBinding Padding}"
                                       
                                       Foreground="{TemplateBinding ControlExtensions:WaterMarkTextExtension.ValidationErrorColor}" 
                                       FontSize="12" 
                                       FontFamily="{TemplateBinding FontFamily}" 
                                       TextTrimming="CharacterEllipsis"/>

                            <Path x:Name="path_watermarkicon" 
                                  Grid.Column="0"
                                  Data="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconPath}" 
                                  Width="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconWidth}"                                  
                                  Height="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconHeight}" 
                                  MaxWidth="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconMaxWidth}" 
                                  MaxHeight="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconMaxHeight}" 
                                  Fill="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconFocusedColor}" 
                                  StrokeThickness="{TemplateBinding BorderThickness}" 
                                  Stretch="Uniform" Margin="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconMargin}" 
                                  Visibility="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconVisibility}" 
                                  VerticalAlignment="Center" />

                            <Line Grid.Column="1" 
                                  Stroke="{TemplateBinding Foreground}" 
                                  StrokeThickness="{TemplateBinding BorderThickness}" 
                                  Stretch="Fill" 
                                  Y1="1" 
                                  Margin="4,10,0,10"
                                  Visibility="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconVisibility}" 
                                  VerticalAlignment="Center" />

                            <ContentPresenter Grid.Column="2"                                               
                                               VerticalAlignment="Center"
                                               Visibility="{Binding IsChecked,Converter={StaticResource BooleanToVisibilityConverter},ConverterParameter='inverse',ElementName=btnToggle}"/>

                            <ScrollViewer x:Name="PART_ContentHost" 
                                          Grid.Column="2" 
                                          Focusable="False" 
                                          HorizontalScrollBarVisibility="Hidden" 
                                          VerticalScrollBarVisibility="Disabled" 
                                          VerticalAlignment="Center" 
                                          Padding="{TemplateBinding Padding}">
                                <!--Visibility="{Binding IsChecked,Converter={StaticResource BooleanToVisibilityConverter},ConverterParameter='inverse,hidden',ElementName=btnToggle}">-->
                                <ScrollViewer.Style>
                                    <Style TargetType="ScrollViewer">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=btnToggle}" Value="True">
                                                <Setter Property="Opacity" Value="0" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ScrollViewer.Style>
                            </ScrollViewer>
                            <!--Foreground="{TemplateBinding ControlHelpers:WaterMarkTextHelper.WatermarkText}"-->
                            <TextBox x:Name="VisibleText" 
                                       Grid.Column="2"
                                       IsReadOnly="True"
                                       FontSize="{TemplateBinding FontSize}"
                                       Foreground="{StaticResource GrayColorBrush}"
                                       Text="{Binding (ControlExtensions:PasswordHelper.Password), RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                       IsHitTestVisible="True" 
                                       FontFamily="{TemplateBinding FontFamily}" 
                                       Opacity="0.8"
                                       Background="Transparent"
                                       Margin="{TemplateBinding Padding}"
                                       VerticalAlignment="Center"
                                       BorderThickness="0"
                                       Visibility="{Binding IsChecked,Converter={StaticResource BooleanToVisibilityConverter},ElementName=btnToggle}"/>
                            <TextBlock x:Name="Message" 
                                       Grid.Column="2" 
                                       FontSize="{TemplateBinding FontSize}"
                                       Text="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkText}" 
                                       Foreground="{TemplateBinding  ControlExtensions:WaterMarkTextExtension.WatermarkColor}" 
                                       IsHitTestVisible="False" 
                                       FontFamily="{TemplateBinding FontFamily}" 
                                       Opacity="0.8" 
                                       HorizontalAlignment="Left" 
                                       VerticalAlignment="Center"
                                       Margin="{TemplateBinding Padding}"  />

                            <!--<TextBox Grid.Column="2" BorderThickness="0" Background="Transparent" FontSize="{TemplateBinding FontSize}" VerticalAlignment="Center" GotKeyboardFocus="gotkeyboardfocus" Name="txt_accesscodeemail" KeyUp="keyup_accesscodeemail" />-->
                            <!--<controls:GifImage2 Grid.Column="2" 
                                                GifSource="/Smart Books;component/Assets/iconDataLoading.gif" 
                                                IsPlaying="{TemplateBinding ControlExtensions:WaterMarkTextExtensions.IsLoading}" 
                                                Stretch="Uniform" 
                                                HorizontalAlignment="Right" 
                                                Height="30" 
                                                Width="30" 
                                                Margin="10,0" 
                                                Visibility="{TemplateBinding ControlHelpers:WaterMarkTextHelper.IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}" />-->

                            <Line x:Name="line_passwordicon" Grid.Column="3" 
                                  Stroke="{TemplateBinding Foreground}" 
                                  StrokeThickness="{TemplateBinding BorderThickness}" 
                                  Stretch="Fill" 
                                  Y1="1" 
                                  Margin="0,10,4,10"
                                  VerticalAlignment="Center"/>

                            <ToggleButton x:Name="btnToggle"
                                Grid.Column="4"
                                Background="Transparent" 
                                BorderThickness="0"
                                Height="{TemplateBinding  ControlExtensions:WaterMarkTextExtension.WatermarkIconHeight}">
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border x:Name="border" 
                                                            HorizontalAlignment="Center" 
                                                            VerticalAlignment="Center"
                                                            Padding="5"
                                                            CornerRadius="5"
                                                            Background="Transparent"
                                                            BorderBrush="Transparent"
                                                            BorderThickness="0"
                                                            SnapsToDevicePixels="True">
                                                        <ContentPresenter x:Name="contentPresenter"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter Property="Background" Value="{StaticResource LightGrayColorBrush}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="{StaticResource LightGrayColorBrush}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                                <Path   x:Name="path_PasswordIcon" 
                                        Data="{TemplateBinding ControlExtensions:PasswordHelper.PasswordIconPath}" 
                                        Width="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconWidth}"                                  
                                        Height="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconHeight}" 
                                        MaxWidth="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconMaxWidth}" 
                                        MaxHeight="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconMaxHeight}" 
                                        Fill="{TemplateBinding Foreground}" 
                                        StrokeThickness="{TemplateBinding BorderThickness}" 
                                        Stretch="Uniform" Margin="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconMargin}" 
                                        VerticalAlignment="Center"/>
                            </ToggleButton>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.75"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ControlExtensions:WaterMarkTextExtension.HasText" Value="False"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource enterGotFocus}"/>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource exitGotFocus}"/>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <Trigger Property="IsFocused" Value="False">
                            <!--<Setter TargetName="path_watermarkicon" Property="Fill" Value="{Binding Source={TemplateBinding Foreground}}" />-->
                            <Setter TargetName="path_watermarkicon" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ControlExtensions:WaterMarkTextExtension.WatermarkIconFocusedColor" Value="{x:Null}"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <!--<Setter TargetName="path_watermarkicon" Property="Fill" Value="{Binding Source={TemplateBinding Foreground}}" />-->
                                <Setter TargetName="path_watermarkicon" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <Trigger Property="ControlExtensions:WaterMarkTextExtension.HasText" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource enterHasText}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource exitHasText}"/>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="ControlExtensions:WaterMarkTextExtension.HasText" Value="False">
                            <Setter TargetName="line_passwordicon" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="btnToggle" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="ControlExtensions:PasswordHelper.PasswordIconVisibility" Value="Hidden">
                            <Setter Property="Visibility" Value="Hidden" TargetName="line_passwordicon"/>
                            <Setter TargetName="btnToggle" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="ControlExtensions:PasswordHelper.PasswordIconVisibility" Value="Collapsed">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="line_passwordicon"/>
                            <Setter TargetName="btnToggle" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>