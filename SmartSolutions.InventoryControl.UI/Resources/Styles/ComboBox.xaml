<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                    xmlns:control="clr-namespace:SmartSolutions.InventoryControl.UI.CustomControls"
                    xmlns:converters="clr-namespace:SmartSolutions.InventoryControl.UI.Converters"
                    xmlns:ControlExtensions="clr-namespace:SmartSolutions.InventoryControl.UI.Helpers.ControlExtensions">

    <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converters:StringToBrushConverter x:Key="StringToBrushConverter" />

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="5" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Flat ComboBox -->
    <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#e3e9ef" />
    <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#fff" />
    <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
    <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />


    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="35" Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup"  MinWidth="{Binding ActualWidth, ElementName=templateRoot}" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                <Border x:Name="dropDownBorder" BorderBrush="{StaticResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="0.5" Background="{StaticResource PureWhiteColorBrush}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Button Style="{StaticResource ContentButton}" Padding="0,5" Visibility="{TemplateBinding ControlExtensions:ComboBoxExtensions.ShowSelectAll, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Border BorderBrush="Transparent" Padding="2,1" Background="{TemplateBinding Background}">
                                <TextBlock Text="SELECT ALL" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="{TemplateBinding Foreground}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" />
                            </Border>

                            <!--<i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <ei:ChangePropertyAction PropertyName="IsChecked" Value="False" TargetObject="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <ei:ChangePropertyAction PropertyName="SelectedIndex" Value="-1" TargetObject="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>-->
                        </Button>
                        <ScrollViewer x:Name="DropDownScrollViewer" Grid.Row="1">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled" Grid.Row="1">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ScrollViewer.CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" ScrollViewer.VerticalScrollBarVisibility="Disabled" Focusable="False"/>
                            </Grid>
                        </ScrollViewer>
                    </Grid>
                </Border>
            </Popup>
            <Path x:Name="WatermarkIconPath"
                  Grid.Column="0"
                  Width="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconWidth}"
                  Height="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconHeight}"
                  Data="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconPath}"
                  Fill="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconColor}"
                  Margin="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconMargin}"
                  StrokeThickness="{TemplateBinding BorderThickness}"
                  Stretch="Uniform"
                  Visibility="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconVisibility}"/>

            <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
            <ContentPresenter x:Name="contentPresenter" Grid.Row="1" Grid.Column="1" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <ContentPresenter.Resources>
                    <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockBaseStyle}">
                        <Setter Property="TextWrapping" Value="NoWrap" />
                    </Style>
                </ContentPresenter.Resources>
            </ContentPresenter>
            <TextBlock x:Name="txt_watermak" Text="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkText}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" Foreground="{TemplateBinding Foreground}" IsHitTestVisible="False" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="SelectedIndex" Value="-1">
                <!--<Setter Property="IsChecked" Value="True" TargetName="checkbox_selectall" />-->
                <Setter Property="Visibility" Value="Visible" TargetName="txt_watermak" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="templateRoot" Value="0.56"/>
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--ComboBox Style-->
    <Style x:Key="BaseComboBox" TargetType="ComboBox">
        <Setter Property="ControlExtensions:MiscControlExtensions.CornerRadius" Value="5" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="#ffffff"/>
        <Setter Property="BorderBrush" Value="#FFB2B2B2"/>
        <Setter Property="Foreground" Value="#ffffff"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="#ffffff"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="26,8"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.Background" Value="#ffffff"/>
        <Setter Property="ScrollViewer.BorderBrush" Value="#FF666666"/>
        <Setter Property="ScrollViewer.BorderThickness" Value="1"/>
        <Setter Property="ControlExtensions:WaterMarkTextExtension.WatermarkIconWidth" Value="30"/>
        <Setter Property="ControlExtensions:WaterMarkTextExtension.WatermarkIconHeight" Value="30"/>
        <Setter Property="ControlExtensions:WaterMarkTextExtension.WatermarkColor" Value="{StaticResource LightGrayColorBrush}"/>
        <!--<Setter Property="ControlExtensions:WaterMarkTextExtension.ValidationErrorColor" Value="{StaticResource RedColorBrush}"/>-->
        <Setter Property="ControlExtensions:WaterMarkTextExtension.SelectionBrush" Value="{StaticResource VeryLightBlueColorBrush}"/>
        <Setter Property="ControlExtensions:WaterMarkTextExtension.WatermarkIconVisibility" Value="Collapsed"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="35" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <!--TODO: Testing Purpose Fix It Later-->
                        <!--<TextBlock x:Name="error" Grid.Column="2" Visibility="Visible" Text="{TemplateBinding ControlExtensions:WaterMarkTextExtension.ValidationErrorMessage}" VerticalAlignment="Bottom" Margin="2,0" Padding="{TemplateBinding Padding}" Foreground="{TemplateBinding  ControlExtensions:WaterMarkTextExtension.ValidationErrorColor}" FontSize="12" FontFamily="{TemplateBinding FontFamily}" TextTrimming="CharacterEllipsis"/>-->
                        <TextBlock x:Name="error" Grid.Column="2" Visibility="Collapsed" Text="Error" VerticalAlignment="Bottom" Margin="2,0" Padding="{TemplateBinding Padding}" Foreground="{StaticResource RedColorBrush}"/>
                        <Path Data="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconPath}" 
                              Width="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconWidth}" 
                              Height="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconHeight}" 
                              Fill="{TemplateBinding Foreground}" 
                              Stretch="Uniform" 
                              Margin="0,0" 
                              Visibility="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconVisibility}" 
                              VerticalAlignment="Center" />
                        <Line Grid.Column="1" Stroke="{TemplateBinding Foreground}" StrokeThickness="{TemplateBinding BorderThickness}" Stretch="Fill" Y1="1" Margin="4,10,0,10" Visibility="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconVisibility}" VerticalAlignment="Center" />
                        <Popup x:Name="PART_Popup" MinWidth="{Binding ElementName=templateRoot, Path=ActualWidth}" AllowsTransparency="true" Grid.Column="0" Grid.ColumnSpan="4" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                            <Border x:Name="dropDownBorder" BorderBrush="{StaticResource LightGrayColorBrush}" CornerRadius="5" BorderThickness="0.7" Background="#FFFFFF">
                                <ScrollViewer x:Name="DropDownScrollViewer">
                                    <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                            <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                        <ToggleButton x:Name="toggleButton" 
                                      Grid.ColumnSpan="4" 
                                      BorderBrush="{TemplateBinding BorderBrush}" 
                                      BorderThickness="{TemplateBinding BorderThickness}" 
                                      Background="{TemplateBinding Background}" 
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      Style="{StaticResource ComboBoxToggleButton}"/>

                        <!--Content="{TemplateBinding SelectionBoxItem}" -->
                        <ContentPresenter x:Name="contentPresenter" 
                                          Grid.ColumnSpan="4"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                          Content="{TemplateBinding SelectionBoxItem}" 
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          IsHitTestVisible="false" 
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                        <TextBlock Visibility="Collapsed" 
                                   IsHitTestVisible="False" 
                                   x:Name="placeholder" 
                                   Grid.ColumnSpan="4" 
                                   Text="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkText}"
                                   VerticalAlignment="Center" 
                                   Margin="2,0" 
                                   Padding="{TemplateBinding Padding}" 
                                   Foreground="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkColor}" 
                                   Opacity="0.8" 
                                   FontSize="{TemplateBinding FontSize}" 
                                   FontFamily="{TemplateBinding FontFamily}"/>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="Text" Value="">
                            <Setter Property="Visibility" TargetName="placeholder" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="placeholder" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="SelectedItem" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="placeholder" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource LightGrayColorBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                            <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxWithPath" TargetType="ComboBox" BasedOn="{StaticResource BaseComboBox}">
        <Setter Property="ControlExtensions:MiscControlExtensions.CornerRadius" Value="5" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Border x:Name="border" BorderThickness="2" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="5" SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Path x:Name="WaterMarkIcon" Grid.Column="0" Data="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconPath}" 
                                  Width="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconWidth}" 
                                  Height="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconHeight}" 
                                  Fill="{TemplateBinding Foreground}" 
                                  Margin="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconMargin}"
                                  Stretch="Uniform" 
                                  Visibility="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconVisibility}" 
                                  VerticalAlignment="Center" />
                            <Line Grid.Column="1" 
                                  Stroke="{TemplateBinding Foreground}" 
                                  StrokeThickness="{TemplateBinding BorderThickness}" 
                                  Stretch="Fill"
                                  Y1="1" 
                                  Margin="4,10,0,10" 
                                  Visibility="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconVisibility}" 
                                  VerticalAlignment="Center" />
                            <Popup x:Name="PART_Popup" MinWidth="{Binding ElementName=templateRoot, Path=ActualWidth}" AllowsTransparency="true" Grid.Column="0" Grid.ColumnSpan="4" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                <Border x:Name="dropDownBorder" BorderBrush="{StaticResource LightGrayColorBrush}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Width="{TemplateBinding Width}" CornerRadius="5" BorderThickness="1" Margin="10 0 0 0" Padding="8 0 0 0" Background="#FFFFFF">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                            <ToggleButton x:Name="toggleButton" 
                                      Grid.Column="2" 
                                      BorderBrush="{TemplateBinding BorderBrush}" 
                                      BorderThickness="{TemplateBinding BorderThickness}" 
                                      Background="{TemplateBinding Background}" 
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      Style="{StaticResource ComboBoxToggleButton}"/>

                            <!--Content="{TemplateBinding SelectionBoxItem}" -->
                            <ContentPresenter x:Name="contentPresenter" 
                                              Grid.Column="2"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                              Content="{TemplateBinding SelectionBoxItem}" 
                                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              IsHitTestVisible="false" 
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                            <TextBlock Visibility="Collapsed" 
                                   IsHitTestVisible="False" 
                                   x:Name="placeholder" 
                                   Grid.Column="2" 
                                   Text="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkText}"
                                   VerticalAlignment="Center" 
                                   Margin="2,0" 
                                   Padding="{TemplateBinding Padding}" 
                                   Foreground="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkColor}" 
                                   Opacity="0.8" 
                                   FontSize="{TemplateBinding FontSize}" 
                                   FontFamily="{TemplateBinding FontFamily}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="Text" Value="">
                            <Setter Property="Visibility" TargetName="placeholder" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="placeholder" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="SelectedItem" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="placeholder" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource LightGrayColorBrush}"/>
                        </Trigger>
                        <!--<Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="WatermarkIcon" Property="Fill"  Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(ControlExtensions:WaterMarkTextExtension.WatermarkIconFocusedColor)}"/>
                        </Trigger>
                        <Trigger Property="ControlExtensions:WaterMarkTextExtension.WatermarkIconFocusedColor" Value="{x:Null}">
                            <Setter TargetName="WatermarkIcon" Property="Fill"  Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(ControlExtensions:WaterMarkTextExtension.WatermarkIconColor)}"/>
                        </Trigger>-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                            <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true" Background="{StaticResource PureWhiteColorBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="35" Width="0"/>
            </Grid.ColumnDefinitions>
            <!--<TextBlock x:Name="error" Grid.Column="2" Visibility="Visible" Text="{TemplateBinding ControlExtensions:WaterMarkTextExtension.ValidationErrorMessage}" VerticalAlignment="Bottom" Margin="2,0" Padding="{TemplateBinding Padding}" Foreground="{TemplateBinding ControlExtensions:WaterMarkTextExtension.ValidationErrorColor}" FontSize="12" FontFamily="{TemplateBinding FontFamily}" TextTrimming="CharacterEllipsis"/>-->
            <TextBlock x:Name="error" Grid.Column="2" Visibility="Visible" Text="Error" VerticalAlignment="Bottom" Margin="2,0" Padding="{TemplateBinding Padding}" Foreground="{StaticResource RedColorBrush}" FontSize="12" FontFamily="{TemplateBinding FontFamily}" TextTrimming="CharacterEllipsis"/>
            <Image Source="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIcon}" Width="35" Height="32" Stretch="Uniform" Margin="13,0" Visibility="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconVisibility}" VerticalAlignment="Center" />
            <Line Grid.Column="1" Stroke="{TemplateBinding Foreground}" StrokeThickness="{TemplateBinding BorderThickness}" Stretch="Fill" Y1="1" Margin="4,10,0,10" Visibility="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconVisibility}" VerticalAlignment="Center" />
            <Popup x:Name="PART_Popup" MinWidth="{Binding ElementName=templateRoot, Path=ActualWidth}" AllowsTransparency="true" Grid.Column="0" Grid.ColumnSpan="4" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                <Border x:Name="dropDownBorder" BorderBrush="{StaticResource LightBlueColorBrush}" BorderThickness="1" Background="{StaticResource PureWhiteColorBrush}" CornerRadius="5" >
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <ScrollViewer x:Name="DropDownScrollViewer" Grid.Row="2">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas Grid.Row="2" x:Name="canvas" HorizontalAlignment="Left" MinHeight="35" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="opaqueRect" 
                                               Fill="{Binding Background, ElementName=dropDownBorder}" 
                                               Height="{Binding ActualHeight, ElementName=dropDownBorder}" 
                                               Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <ItemsPresenter Grid.Row="2" 
                                                x:Name="ItemsPresenter" 
                                                KeyboardNavigation.DirectionalNavigation="Contained" 
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Grid>
                </Border>
            </Popup>
            <ToggleButton x:Name="toggleButton" Grid.ColumnSpan="4" BorderBrush="{TemplateBinding BorderBrush}" Content="{Binding }" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}" ControlExtensions:MiscControlExtensions.CornerRadius="{TemplateBinding ControlExtensions:MiscControlExtensions.CornerRadius}"/>
            <!--<ContentPresenter x:Name="contentPresenter" Grid.Column="2" TextBlock.Foreground="Black" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>-->
            <TextBlock x:Name="txt_watermark"
                       Grid.Column="2" 
                       Text="{TemplateBinding Text}"
                       Visibility="Visible" 
                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                       Margin="{TemplateBinding Padding}" 
                       FontSize="{TemplateBinding FontSize}" 
                       FontFamily="{TemplateBinding FontFamily}" 
                       Foreground="{TemplateBinding Foreground}" 
                       IsHitTestVisible="False" />
            <Border x:Name="border" Grid.Column="2" Background="{TemplateBinding Background}" Margin="{TemplateBinding BorderThickness}">

            </Border>

            <!--<TextBlock Opacity="0.8" 
                       Visibility="Collapsed" 
                       x:Name="placeholder" 
                       Grid.Column="2" 
                       Text="{TemplateBinding Text}" 
                       VerticalAlignment="Center" 
                       HorizontalAlignment="Left" 
                       TextWrapping="NoWrap" 
                       TextTrimming="CharacterEllipsis"  
                       Margin="2,0" Padding="{TemplateBinding Padding}" 
                       Foreground="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkColor}" 
                       FontSize="{TemplateBinding FontSize}" 
                       FontFamily="{TemplateBinding FontFamily}"/>-->
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="SelectedItem" Value="{x:Null}">
                <Setter TargetName="txt_watermark" Property="Visibility" Value="Visible" />
                <!--<Setter TargetName="txt_watermark" Property="Text" Value="{Binding SelectedValue, RelativeSource={RelativeSource TemplatedParent}}" />-->
                <Setter TargetName="txt_watermark" Property="Text"  Value="{Binding (ControlExtensions:WaterMarkTextExtension.WatermarkText), RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter Property="Opacity" Value="0.8"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--<DataTemplate x:Key="ContentExtendingDropdownTemplate" DataType="{x:Type models:BaseModel}">
        <Border x:Name="border" BorderThickness="0" BorderBrush="Transparent">
            <Grid Margin="0 0 0 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.2*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Path x:Name="ProductImage"
                      Stretch="Uniform" 
                      Height="18" 
                      Width="18"
                      ToolTip="{Binding Description,Mode=OneWay}"
                      Margin="0 0 0 0"
                      Data="{Binding Image,Mode=OneWay}"/>
                <TextBlock x:Name="ProductNameTextBlock"
                           Grid.Column="1"
                           Text="{Binding ShortName,Mode=OneWay}"
                           FontFamily="{StaticResource MediumFont}"
                           HorizontalAlignment="Left"
                           FontSize="{StaticResource MediumSize}"
                           ToolTip="{Binding ShortName,Mode=OneWay}"
                           Margin="5 0 0 0">
                </TextBlock>
            </Grid>
            -->
    <!-- Add a render scale transform -->
    <!--
            <Border.RenderTransform>
                <ScaleTransform />
            </Border.RenderTransform>
            <Border.RenderTransformOrigin>
                <Point X="0" Y="0.5" />
            </Border.RenderTransformOrigin>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsActive,Mode=OneWay}" Value="True">
                <Setter TargetName="ProductNameTextBlock" Property="TextBlock.Foreground" Value="{StaticResource GrayColorBrush}"/>
                <Setter TargetName="ProductImage"  Property="Opacity" Value="0.8"/>
                <Setter TargetName="ProductImage" Property="Fill" Value="{Binding ImageColor,Mode=OneWay,Converter={StaticResource StringToBrushConverter}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsActive,Mode=OneWay}" Value="False">
                <Setter TargetName="ProductNameTextBlock" Property="TextBlock.Foreground" Value="{StaticResource LightGrayColorBrush}"/>
                <Setter TargetName="ProductImage"  Property="Opacity" Value="0.7"/>
                <Setter TargetName="ProductImage" Property="Fill" Value="{StaticResource GrayColorBrush}"/>

            </DataTrigger>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation To="1.4" Duration="0:0:0.15" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" />
                        <DoubleAnimation To="1.4" Duration="0:0:0.15" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation To="1" Duration="0:0:0.15" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" />
                        <DoubleAnimation To="1" Duration="0:0:0.15" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>-->

    <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2" 
                    Name="Border"
                    BorderBrush="{StaticResource LightBlueColorBrush}" 
                    CornerRadius="5" 
                    BorderThickness="1.7" 
                    Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
            <Border Grid.Column="1" 
                    Margin="1, 2, 1, 2" 
                    BorderBrush="#444" 
                    Name="ButtonBorder"
                    CornerRadius="0,5,0,5" 
                    BorderThickness="0, 0, 0, 0" 
                    Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

            <Path Name="Arrow" 
                  Grid.Column="1" 
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                  HorizontalAlignment="Center" 
                  Fill="#444"
                  VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="TextElement.Foreground" Value="Black"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Grid.Column="2"
                                      ClickMode="Press" Focusable="False"
                                      IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                     Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                        <!--ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"-->
                        <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                            />
                        <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox" >
                                    <Border Name="PART_ContentHost" Focusable="False" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <!-- Popup showing items -->
                        <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                <Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
                        CornerRadius="3" BorderThickness="1.7" 
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                            <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                            <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End of Flat ComboBox -->

    <Style x:Key="SearchableComboBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="BorderBrush" Value="{StaticResource LightBlueColorBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <TextBlock FontSize="{StaticResource NormalSize}" FontFamily="{StaticResource MediumFont}" Foreground="{StaticResource GrayColorBrush}" Text="{Binding Name,Mode=OneWay}"/>
                            <TextBlock x:Name="CompanyNameTextBlock"  Grid.Row="1" FontSize="{StaticResource MediumSize}" FontFamily="{StaticResource MediumFont}" Foreground="{StaticResource LightGrayColorBrush}" Text="{Binding CompanyName,Mode=OneWay}"/>
                            <TextBlock Grid.Row="2" FontSize="{StaticResource NormalSize}" FontFamily="{StaticResource MediumFont}" Foreground="{StaticResource LightBlueColorBrush}" Text="{Binding Mobile,Mode=OneWay}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#ffedf2f8" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#edf2f8" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="SearchableComboBoxEditableTemplate" TargetType="{x:Type control:SearchableComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="35" Width="0"/>
            </Grid.ColumnDefinitions>
            <!--<ToggleButton Grid.ColumnSpan="4" Opacity="0" Focusable="False" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>-->

            <!--TODO Testing Purpose-->
            <TextBlock x:Name="error" Grid.Column="2" Visibility="Visible" Text="Error" VerticalAlignment="Bottom" Margin="2,0" Padding="{TemplateBinding Padding}" Foreground="{TemplateBinding ControlExtensions:WaterMarkTextExtension.ValidationErrorColor}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" TextTrimming="CharacterEllipsis"/>
            <!--<TextBlock x:Name="error" Grid.Column="2" Visibility="Collapsed"  VerticalAlignment="Bottom" Margin="2,0" Padding="{TemplateBinding Padding}" Text="Error" Foreground="{StaticResource RedColorBrush}"/>-->

            <!--<TextBlock x:Name="DisplayText" Grid.Column="2" Text="{TemplateBinding Text}" VerticalAlignment="Bottom" Margin="2,0" Padding="{TemplateBinding Padding}" Foreground="{TemplateBinding ControlHelpers:WaterMarkTextHelper.ValidationErrorColor}" FontSize="12" FontFamily="{TemplateBinding FontFamily}" TextTrimming="CharacterEllipsis"/>-->
            <Image Grid.Column="0"
                   Source="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIcon}" 
                   Width="35" 
                   Height="32" 
                   Stretch="Uniform" 
                   Margin="13,0" 
                   Visibility="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconVisibility}" 
                   VerticalAlignment="Center" />
            <Path x:Name="WatermarkIconPath"
                  Grid.Column="0"
                  Width="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconWidth}"
                  Height="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconHeight}"
                  Data="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconPath}"
                  Fill="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconColor}"
                  Margin="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconMargin}"
                  StrokeThickness="{TemplateBinding BorderThickness}"
                  Stretch="Uniform"
                  Visibility="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconVisibility}"/>
            <Line Grid.Column="1" Stroke="{TemplateBinding Foreground}" StrokeThickness="{TemplateBinding BorderThickness}" Stretch="Fill" Y1="1" Margin="4,10,0,10" Visibility="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkIconVisibility}" VerticalAlignment="Center" />
            <Popup x:Name="PART_Popup" Width="{Binding ElementName=templateRoot, Path=ActualWidth}" AllowsTransparency="true" Grid.Column="0" Grid.ColumnSpan="4" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                <Border x:Name="dropDownBorder" BorderBrush="{StaticResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="0.3" Background="{StaticResource PureWhiteColorBrush}" CornerRadius="5" >
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBox Grid.Row="0" x:Name="PART_SearchTextBox" 
                                 AcceptsReturn="False" 
                                 Focusable="True" 
                                 Margin="8 5 5 5"
                                 Padding="10 0 0 0"
                                 TextAlignment="Left"
                                 BorderBrush="#ffedf2f8" 
                                 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                 IsReadOnly="False"
                                 Style="{StaticResource TextBoxVisibilityPathIconStyle}" 
                                 FontSize="{StaticResource SmallSize}" 
                                 FontFamily="{StaticResource MediumFont}" 
                                 BorderThickness="2"
                                 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                 Foreground="{TemplateBinding Foreground}"
                                 CaretBrush="{TemplateBinding Foreground}" 
                                 SelectionBrush="{TemplateBinding ControlExtensions:WaterMarkTextExtension.SelectionBrush}"  
                                 MaxHeight="35"
                                 ControlExtensions:WaterMarkTextExtension.WatermarkText="Search..." 
                                 ControlExtensions:WaterMarkTextExtension.WatermarkColor="{StaticResource LightGrayColorBrush}" 
                                 ControlExtensions:WaterMarkTextExtension.RightWatermarkIconPath="{StaticResource Shape_Search}" 
                                 ControlExtensions:WaterMarkTextExtension.RightWatermarkIconVisibility="Visible" 
                                 ControlExtensions:WaterMarkTextExtension.WatermarkIconColor="#ffedf2f8" 
                                 ControlExtensions:WaterMarkTextExtension.WatermarkIconHeight="17" 
                                 ControlExtensions:WaterMarkTextExtension.IsMonitoring="True"  />
                        <!-- Visibility="{TemplateBinding ControlExtensions:ComboBoxExtension.ShowSelectAll, Converter={StaticResource BooleanToVisibilityConverter}}"-->
                        <Button x:Name="SelectAllButton" Grid.Row="1" Visibility="Collapsed" Style="{StaticResource ContentButton}" Padding="3,5">
                            <Border BorderBrush="Transparent" Padding="2,1" Background="{TemplateBinding Background}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    <TextBlock Text="SHOW ALL" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="{TemplateBinding Foreground}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" />
                                    <CheckBox x:Name="checkbox_selectall" Grid.Column="1" IsEnabled="False" Opacity="1" BorderThickness="1" />
                                </Grid>
                            </Border>

                            <!--TODO: Have to Fix these Part-->
                            <!--<i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <ei:ChangePropertyAction PropertyName="IsChecked" Value="False" TargetObject="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <ei:ChangePropertyAction PropertyName="SelectedIndex" Value="-1" TargetObject="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>-->
                        </Button>
                        <ScrollViewer x:Name="DropDownScrollViewer" Grid.Row="2" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Disabled" PanningMode="None">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas Grid.Row="2" x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <!--<ItemsPresenter Grid.Row="2" x:Name="ItemsPresenter"  KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>-->
                                <!--ItemContainerStyle="{StaticResource ListBoxItemCheckBoxStyle}"-->
                                <ListBox Grid.Row="2" 
                                         x:Name="PART_CurrentList" 
                                         IsSynchronizedWithCurrentItem="{TemplateBinding IsSynchronizedWithCurrentItem}" 
                                         BorderThickness="0" 
                                         Background="Transparent" 
                                         KeyboardNavigation.DirectionalNavigation="Contained" 
                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                         SelectedValuePath="{TemplateBinding SelectedValuePath}" 
                                         ScrollViewer.VerticalScrollBarVisibility="Auto" 
                                         ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                                         ScrollViewer.PanningMode="VerticalOnly" 
                                         Foreground="{TemplateBinding Foreground}"
                                         ItemTemplate="{TemplateBinding ItemTemplate}">
                                    <ListBox.GroupStyle>
                                        <GroupStyle HidesIfEmpty="True">
                                            <GroupStyle.HeaderTemplate>
                                                <DataTemplate>
                                                    <Border Padding="0,5" Background="{StaticResource GrayColorBrush}">
                                                        <TextBlock Margin="10 0 0 0" Foreground="{StaticResource PureWhiteColorBrush}" Text="{Binding Name}" />
                                                        <Border.Style>
                                                            <Style TargetType="Border">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Name}" Value="">
                                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Name}" Value="{x:Null}">
                                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                    </Border>
                                                </DataTemplate>
                                            </GroupStyle.HeaderTemplate>
                                        </GroupStyle>
                                    </ListBox.GroupStyle>
                                </ListBox>
                            </Grid>
                        </ScrollViewer>
                    </Grid>
                </Border>
            </Popup>
            <ToggleButton x:Name="toggleButton" Grid.ColumnSpan="4" BorderBrush="{TemplateBinding BorderBrush}" Content="{TemplateBinding Text}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}" ControlExtensions:MiscControlExtensions.CornerRadius="{TemplateBinding ControlExtensions:MiscControlExtensions.CornerRadius}"/>
            <TextBlock x:Name="txt_watermark" Grid.Column="2" Visibility="Collapsed"  Text="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkText}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" Foreground="{TemplateBinding ControlExtensions:WaterMarkTextExtension.WatermarkColor}" IsHitTestVisible="False" />
            <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding SelectedItem}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" ContentTemplate="{TemplateBinding AltSelectionBoxItemTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Grid.Column="2" IsHitTestVisible="False"/>
        </Grid>
        <ControlTemplate.Triggers>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="templateRoot" Value="0.75"/>
            </Trigger>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Visibility" Value="Visible" TargetName="PART_SearchTextBox"/>
                <Setter Property="Visibility" Value="Visible" TargetName="contentPresenter"/>
            </Trigger>
            <Trigger Property="AltSelectionBoxItemTemplate" Value="{x:Null}">
                <Setter TargetName="contentPresenter" Property="Content" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Text}" />
                <Setter TargetName="contentPresenter" Property="ContentTemplate" Value="{x:Null}" />
            </Trigger>
            <Trigger Property="ItemTemplate" Value="{x:Null}">
                <Setter TargetName="PART_CurrentList" Property="ItemTemplate" Value="{x:Null}" />
                <Setter TargetName="PART_CurrentList" Property="DisplayMemberPath" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DisplayMemberPath}" />
            </Trigger>
            <Trigger Property="SelectedItem" Value="{x:Null}">
                <Setter TargetName="txt_watermark" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource BaseComboBox}" />
    <Style x:Key="BaseSearchableComboBox" TargetType="{x:Type control:SearchableComboBox}" BasedOn="{StaticResource BaseComboBox}">
        <Setter Property="IsSynchronizedWithCurrentItem" Value="False" />
        <Setter Property="FontFamily" Value="{StaticResource MediumFont}" />
        <Setter Property="Template" Value="{StaticResource SearchableComboBoxEditableTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="Template" Value="{StaticResource SearchableComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type control:SearchableComboBox}" BasedOn="{StaticResource BaseSearchableComboBox}" />
</ResourceDictionary>